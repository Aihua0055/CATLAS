/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('catlas:server');
var http = require('http');
var mongoose = require("mongoose");

/**
 * Get variables from environment and store in Express.
 */

var db_pw = require('../config').db_pw;
var port = require('../config').port;
app.set('port', port);

var dbURI = 'mongodb+srv://catlas_user:' + db_pw + '@catlasdb-zlvpm.mongodb.net/catList?retryWrites=true';

/**
 * Connect to MongoDB database 
 */
mongoose.connect(dbURI, { useNewUrlParser: true }, function (err, res) {
  if (err) {
    console.log('ERROR connecting to db.' + err);
  } else {
    console.log('Succeeded connecting to db');
  }
});

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
console.log('Open your browser to http://localhost:' + port);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
